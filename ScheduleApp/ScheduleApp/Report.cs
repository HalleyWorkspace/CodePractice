using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using ScheduleApp.dataControl;

namespace ScheduleApp
{
    public partial class Report : Form
    {
        private List<scheduleObject> reportData;
        public Report()
        {
            InitializeComponent();
            //
            reportData = DatabaseAccess.getSchedule();
            typeReport();
            comboBox1.SelectedIndex = 0;
        }




        private void typeReport()
        {
            reportView.Columns.Clear();
            reportView.AutoGenerateColumns = false;
            reportView.DataSource = null;
            reportView.Columns.Add("id", "Month, Year, Type");
            reportView.Columns.Add("count", "Count");
            description.Text = "This report shows a count of different apointment types each month";

            //multiple lambda functions used
            //first one sets the key created by grouping values that will make a unique combination
            //second one uses the key generated by the first one to count how many times each selected key occurs
            reportView.DataSource = reportData.GroupBy(x => (x.date.Month, x.date.Year, x.type)).Select(x => new { Id = x.Key, Count = x.Count() }).ToList();
            reportView.Columns["id"].DataPropertyName = "Id";
            reportView.Columns["count"].DataPropertyName = "Count";
            

            
        }

        private void userApointmentCount()
        {
            reportView.Columns.Clear();
            reportView.AutoGenerateColumns = true;
            reportView.DataSource = null;
            description.Text = "This report shows a count of total apointments for each user/consultant";

            //multiple lambda functions used
            //first one sets the key created by grouping values that will make a unique combination
            //second one uses the key generated by the first one to count how many times each selected key occurs
            reportView.DataSource = reportData.GroupBy(x => x.consultantName).Select(x => new { Name = x.Key, Count = x.Count() }).ToList();
        }

        private void comboBox1_SelectedValueChanged(object sender, EventArgs e)
        {
            if (comboBox1.SelectedIndex == 0)
                typeReport();
            if (comboBox1.SelectedIndex == 1)
                userApointmentCount();
        }
    }

}
